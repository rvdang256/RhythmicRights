import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import Navbar from "@/components/Navbar";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
  faYoutube,
  faSoundcloud,
  faSpotify,
  faNapster,
} from '@fortawesome/free-brands-svg-icons'
import styled, {keyframes} from "styled-components";
import { useRouter } from 'next/router';
import { useStateContext } from '@/context/StateContext';

import {
  faHeadphones,
  faMusic
} from '@fortawesome/free-solid-svg-icons'



const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const router = useRouter();
  const {user, setUser} = useStateContext();

  function handleButtonClick() {
    if (user != null) {
      router.push('/MusicNFT');}
      else{
        router.push('/Login');;
      }
    
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <Container>
        <TextArea>
        <Text>
          RhythmicRights is an application that allows artists to mint their music as NFTs. With the simple steps
          of uploading your music, you can mint your music as an NFT and sell it to your fans!
          </Text>
          <CustomButton onClick={handleButtonClick}>Get Started</CustomButton>
        </TextArea>
        

        

        <StageCubeContainer>
        <CubeSpinner>
          <Face1>
            <FontAwesomeIcon icon={faSoundcloud} />
          </Face1>
          <Face2>
            <FontAwesomeIcon icon={faSpotify} />
          </Face2>
          <Face3>
            <FontAwesomeIcon icon={faNapster} />
          </Face3>
          <Face4>
            <FontAwesomeIcon icon={faYoutube} />
          </Face4>
          <Face5>
            <FontAwesomeIcon icon={faHeadphones} />
          </Face5>
          <Face6>
            <FontAwesomeIcon icon={faMusic} />
          </Face6>
        </CubeSpinner>
      </StageCubeContainer>
    </Container>
    </>
  );
}


const Container = styled.div`
  width: 100vw;
  background-color: #022c43;
  padding: 0;
  height: 20;
  height: 89.5vh;
`

const TextArea = styled.div`
  position: absolute;
  left: 10%;
  top: 50%;
  transform: translateY(-50%);
  width: 35%;
  vertical-align: middle;
  display: table-cell;
  max-height: 90%;

`;


const Text = styled.p`
font-size: 26px;
color: #fff;
font-family: Helvetica, sans-serif;
font-weight: 300;
min-width: fit-content;
margin-bottom: 20px;
`;

const spinCube = keyframes`
  from, to {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  }
  16% {
    transform: rotateY(-90deg) rotateZ(90deg);
  }
  33% {
    transform: rotateY(-90deg) rotateX(90deg);
  }
  50% {
    transform: rotateY(-180deg) rotateZ(90deg);
  }
  66% {
    transform: rotateY(-270deg) rotateX(90deg);
  }
  83% {
    transform: rotateX(90deg);
  }
`;

const StageCubeContainer = styled.div`
  width: 50%;
  height: 50%;
  top: 0;
  padding-top: 15%;
  margin-left: 50%; 
  position: relative;
  right: 0;

  overflow: hidden;
`;

const CubeSpinner = styled.div`
  animation-name: ${spinCube};
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
  animation-duration: 12s;
  transform-style: preserve-3d;
  transform-origin: 100px 100px 0;
  margin-left: calc(50% - 100px);
`;

const Face = styled.div`
  position: absolute;
  width: 200px;
  height: 200px;
  border: 1px solid #ccc;
  background: rgba(255, 255, 255, 0.4);
  text-align: center;
  font-size: 100px;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 0 20px 0px lightyellow;
`;

const Face1 = styled(Face)`
  transform: translateZ(100px);
  color: orange;
`;
const Face2 = styled(Face)`
  transform: rotateY(90deg) translateZ(100px) rotateZ(270deg);
  color: green;
`;
const Face3 = styled(Face)`
  transform: rotateY(90deg) rotateX(90deg) translateZ(100px);
  color: blue;
`;
const Face4 = styled(Face)`
  transform: rotateY(180deg) rotateZ(90deg) translateZ(100px);
  color: red;
`;
const Face5 = styled(Face)`
  transform: rotateY(-90deg) rotateZ(90deg) translateZ(100px);
  color: #aa6bed;
`;
const Face6 = styled(Face)`
  transform: rotateX(-90deg) translateZ(100px);
  color: #ffd700;
`;

const CustomButton = styled.button`
  --border: 5px;    /* the border width */
  --slant: 0.7em;   /* control the slanted corners */
  --color: #ffd700; /* the color */
  
  font-size: 35px;
  padding: 0.4em 1.2em;
  border: none;
  cursor: pointer;
  font-weight: bold;
  color: var(--color);
  background: 
     linear-gradient(to bottom left, var(--color) 50%, #0000 50.1%) top right,
     linear-gradient(to top right, var(--color) 50%, #0000 50.1%) bottom left;
  background-size: calc(var(--slant) + 1.3 * var(--border)) calc(var(--slant) + 1.3 * var(--border));
  background-repeat: no-repeat;
  box-shadow:
    0 0 0 200px inset var(--s, #0000),
    0 0 0 var(--border) inset var(--color);
  clip-path: 
      polygon(0 0, calc(100% - var(--slant)) 0, 100% var(--slant),
              100% 100%, var(--slant) 100%, 0 calc(100% - var(--slant))
             );
  transition: color var(--t, 0.3s), background-size 0.3s;

  &:focus-visible {
    outline-offset: calc(-1 * var(--border));
    outline: var(--border) solid #000c;
    clip-path: none;
    background-size: 0 0;
  }

  &:hover,
  &:active {
    background-size: 100% 100%;
    color: #fff;
    --t: 0.2s 0.1s;
  }

  &:active {
    --s: #0005;
    transition: none;
  }
`;
